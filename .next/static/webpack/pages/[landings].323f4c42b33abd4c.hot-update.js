/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/[landings]",{

/***/ "./node_modules/google-maps-infobox/infobox-module.js":
/*!************************************************************!*\
  !*** ./node_modules/google-maps-infobox/infobox-module.js ***!
  \************************************************************/
/***/ (function(module) {

eval("/**\n * @name InfoBox\n * @version 1.1.13 [March 19, 2014]\n * @author Gary Little (inspired by proof-of-concept code from Pamela Fox of Google)\n * @copyright Copyright 2010 Gary Little [gary at luxcentral.com]\n * @fileoverview InfoBox extends the Google Maps JavaScript API V3 <tt>OverlayView</tt> class.\n *  <p>\n *  An InfoBox behaves like a <tt>google.maps.InfoWindow</tt>, but it supports several\n *  additional properties for advanced styling. An InfoBox can also be used as a map label.\n *  <p>\n *  An InfoBox also fires the same events as a <tt>google.maps.InfoWindow</tt>.\n */\n\n/*!\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *       http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browser:true */\n/*global google */\n\n/**\n * @name InfoBoxOptions\n * @class This class represents the optional parameter passed to the {@link InfoBox} constructor.\n * @property {string|Node} content The content of the InfoBox (plain text or an HTML DOM node).\n * @property {boolean} [disableAutoPan=false] Disable auto-pan on <tt>open</tt>.\n * @property {number} maxWidth The maximum width (in pixels) of the InfoBox. Set to 0 if no maximum.\n * @property {Size} pixelOffset The offset (in pixels) from the top left corner of the InfoBox\n *  (or the bottom left corner if the <code>alignBottom</code> property is <code>true</code>)\n *  to the map pixel corresponding to <tt>position</tt>.\n * @property {LatLng} position The geographic location at which to display the InfoBox.\n * @property {number} zIndex The CSS z-index style value for the InfoBox.\n *  Note: This value overrides a zIndex setting specified in the <tt>boxStyle</tt> property.\n * @property {string} [boxClass=\"infoBox\"] The name of the CSS class defining the styles for the InfoBox container.\n * @property {Object} [boxStyle] An object literal whose properties define specific CSS\n *  style values to be applied to the InfoBox. Style values defined here override those that may\n *  be defined in the <code>boxClass</code> style sheet. If this property is changed after the\n *  InfoBox has been created, all previously set styles (except those defined in the style sheet)\n *  are removed from the InfoBox before the new style values are applied.\n * @property {string} closeBoxMargin The CSS margin style value for the close box.\n *  The default is \"2px\" (a 2-pixel margin on all sides).\n * @property {string} closeBoxURL The URL of the image representing the close box.\n *  Note: The default is the URL for Google's standard close box.\n *  Set this property to \"\" if no close box is required.\n * @property {Size} infoBoxClearance Minimum offset (in pixels) from the InfoBox to the\n *  map edge after an auto-pan.\n * @property {boolean} [isHidden=false] Hide the InfoBox on <tt>open</tt>.\n *  [Deprecated in favor of the <tt>visible</tt> property.]\n * @property {boolean} [visible=true] Show the InfoBox on <tt>open</tt>.\n * @property {boolean} alignBottom Align the bottom left corner of the InfoBox to the <code>position</code>\n *  location (default is <tt>false</tt> which means that the top left corner of the InfoBox is aligned).\n * @property {string} pane The pane where the InfoBox is to appear (default is \"floatPane\").\n *  Set the pane to \"mapPane\" if the InfoBox is being used as a map label.\n *  Valid pane names are the property names for the <tt>google.maps.MapPanes</tt> object.\n * @property {boolean} enableEventPropagation Propagate mousedown, mousemove, mouseover, mouseout,\n *  mouseup, click, dblclick, touchstart, touchend, touchmove, and contextmenu events in the InfoBox\n *  (default is <tt>false</tt> to mimic the behavior of a <tt>google.maps.InfoWindow</tt>). Set\n *  this property to <tt>true</tt> if the InfoBox is being used as a map label.\n */\n\n/**\n * Creates an InfoBox with the options specified in {@link InfoBoxOptions}.\n *  Call <tt>InfoBox.open</tt> to add the box to the map.\n * @constructor\n * @param {InfoBoxOptions} [opt_opts]\n */\nfunction InfoBox(opt_opts) {\n\n  opt_opts = opt_opts || {};\n\n  google.maps.OverlayView.apply(this, arguments);\n\n  // Standard options (in common with google.maps.InfoWindow):\n  //\n  this.content_ = opt_opts.content || \"\";\n  this.disableAutoPan_ = opt_opts.disableAutoPan || false;\n  this.maxWidth_ = opt_opts.maxWidth || 0;\n  this.pixelOffset_ = opt_opts.pixelOffset || new google.maps.Size(0, 0);\n  this.position_ = opt_opts.position || new google.maps.LatLng(0, 0);\n  this.zIndex_ = opt_opts.zIndex || null;\n\n  // Additional options (unique to InfoBox):\n  //\n  this.boxClass_ = opt_opts.boxClass || \"infoBox\";\n  this.boxStyle_ = opt_opts.boxStyle || {};\n  this.closeBoxMargin_ = opt_opts.closeBoxMargin || \"2px\";\n  this.closeBoxURL_ = opt_opts.closeBoxURL || \"http://www.google.com/intl/en_us/mapfiles/close.gif\";\n  if (opt_opts.closeBoxURL === \"\") {\n    this.closeBoxURL_ = \"\";\n  }\n  this.infoBoxClearance_ = opt_opts.infoBoxClearance || new google.maps.Size(1, 1);\n\n  if (typeof opt_opts.visible === \"undefined\") {\n    if (typeof opt_opts.isHidden === \"undefined\") {\n      opt_opts.visible = true;\n    } else {\n      opt_opts.visible = !opt_opts.isHidden;\n    }\n  }\n  this.isHidden_ = !opt_opts.visible;\n\n  this.alignBottom_ = opt_opts.alignBottom || false;\n  this.pane_ = opt_opts.pane || \"floatPane\";\n  this.enableEventPropagation_ = opt_opts.enableEventPropagation || false;\n\n  this.div_ = null;\n  this.closeListener_ = null;\n  this.moveListener_ = null;\n  this.mapListener_ = null;\n  this.contextListener_ = null;\n  this.eventListeners_ = null;\n  this.fixedWidthSet_ = null;\n}\n\n/* InfoBox extends OverlayView in the Google Maps API v3.\n */\nInfoBox.prototype = new google.maps.OverlayView();\n\n/**\n * Creates the DIV representing the InfoBox.\n * @private\n */\nInfoBox.prototype.createInfoBoxDiv_ = function () {\n\n  var i;\n  var events;\n  var bw;\n  var me = this;\n\n  // This handler prevents an event in the InfoBox from being passed on to the map.\n  //\n  var cancelHandler = function (e) {\n    e.cancelBubble = true;\n    if (e.stopPropagation) {\n      e.stopPropagation();\n    }\n  };\n\n  // This handler ignores the current event in the InfoBox and conditionally prevents\n  // the event from being passed on to the map. It is used for the contextmenu event.\n  //\n  var ignoreHandler = function (e) {\n\n    e.returnValue = false;\n\n    if (e.preventDefault) {\n\n      e.preventDefault();\n    }\n\n    if (!me.enableEventPropagation_) {\n\n      cancelHandler(e);\n    }\n  };\n\n  if (!this.div_) {\n\n    this.div_ = document.createElement(\"div\");\n\n    this.setBoxStyle_();\n\n    if (typeof this.content_.nodeType === \"undefined\") {\n      this.div_.innerHTML = this.getCloseBoxImg_() + this.content_;\n    } else {\n      this.div_.innerHTML = this.getCloseBoxImg_();\n      this.div_.appendChild(this.content_);\n    }\n\n    // Add the InfoBox DIV to the DOM\n    this.getPanes()[this.pane_].appendChild(this.div_);\n\n    this.addClickHandler_();\n\n    if (this.div_.style.width) {\n\n      this.fixedWidthSet_ = true;\n\n    } else {\n\n      if (this.maxWidth_ !== 0 && this.div_.offsetWidth > this.maxWidth_) {\n\n        this.div_.style.width = this.maxWidth_;\n        this.fixedWidthSet_ = true;\n\n      } else { // The following code is needed to overcome problems with MSIE\n\n        bw = this.getBoxWidths_();\n\n        this.div_.style.width = (this.div_.offsetWidth - bw.left - bw.right) + \"px\";\n        this.fixedWidthSet_ = false;\n      }\n    }\n\n    this.panBox_(this.disableAutoPan_);\n\n    if (!this.enableEventPropagation_) {\n\n      this.eventListeners_ = [];\n\n      // Cancel event propagation.\n      //\n      // Note: mousemove not included (to resolve Issue 152)\n      events = [\"mousedown\", \"mouseover\", \"mouseout\", \"mouseup\",\n      \"click\", \"dblclick\", \"touchstart\", \"touchend\", \"touchmove\"];\n\n      for (i = 0; i < events.length; i++) {\n\n        this.eventListeners_.push(google.maps.event.addDomListener(this.div_, events[i], cancelHandler));\n      }\n\n      // Workaround for Google bug that causes the cursor to change to a pointer\n      // when the mouse moves over a marker underneath InfoBox.\n      this.eventListeners_.push(google.maps.event.addDomListener(this.div_, \"mouseover\", function (e) {\n        this.style.cursor = \"default\";\n      }));\n    }\n\n    this.contextListener_ = google.maps.event.addDomListener(this.div_, \"contextmenu\", ignoreHandler);\n\n    /**\n     * This event is fired when the DIV containing the InfoBox's content is attached to the DOM.\n     * @name InfoBox#domready\n     * @event\n     */\n    google.maps.event.trigger(this, \"domready\");\n  }\n};\n\n/**\n * Returns the HTML <IMG> tag for the close box.\n * @private\n */\nInfoBox.prototype.getCloseBoxImg_ = function () {\n\n  var img = \"\";\n\n  if (this.closeBoxURL_ !== \"\") {\n\n    img  = \"<img\";\n    img += \" src='\" + this.closeBoxURL_ + \"'\";\n    img += \" align=right\"; // Do this because Opera chokes on style='float: right;'\n    img += \" style='\";\n    img += \" position: relative;\"; // Required by MSIE\n    img += \" cursor: pointer;\";\n    img += \" margin: \" + this.closeBoxMargin_ + \";\";\n    img += \"'>\";\n  }\n\n  return img;\n};\n\n/**\n * Adds the click handler to the InfoBox close box.\n * @private\n */\nInfoBox.prototype.addClickHandler_ = function () {\n\n  var closeBox;\n\n  if (this.closeBoxURL_ !== \"\") {\n\n    closeBox = this.div_.firstChild;\n    this.closeListener_ = google.maps.event.addDomListener(closeBox, \"click\", this.getCloseClickHandler_());\n\n  } else {\n\n    this.closeListener_ = null;\n  }\n};\n\n/**\n * Returns the function to call when the user clicks the close box of an InfoBox.\n * @private\n */\nInfoBox.prototype.getCloseClickHandler_ = function () {\n\n  var me = this;\n\n  return function (e) {\n\n    // 1.0.3 fix: Always prevent propagation of a close box click to the map:\n    e.cancelBubble = true;\n\n    if (e.stopPropagation) {\n\n      e.stopPropagation();\n    }\n\n    /**\n     * This event is fired when the InfoBox's close box is clicked.\n     * @name InfoBox#closeclick\n     * @event\n     */\n    google.maps.event.trigger(me, \"closeclick\");\n\n    me.close();\n  };\n};\n\n/**\n * Pans the map so that the InfoBox appears entirely within the map's visible area.\n * @private\n */\nInfoBox.prototype.panBox_ = function (disablePan) {\n\n  var map;\n  var bounds;\n  var xOffset = 0, yOffset = 0;\n\n  if (!disablePan) {\n\n    map = this.getMap();\n\n    if (map instanceof google.maps.Map) { // Only pan if attached to map, not panorama\n\n      if (!map.getBounds().contains(this.position_)) {\n      // Marker not in visible area of map, so set center\n      // of map to the marker position first.\n        map.setCenter(this.position_);\n      }\n\n      bounds = map.getBounds();\n\n      var mapDiv = map.getDiv();\n      var mapWidth = mapDiv.offsetWidth;\n      var mapHeight = mapDiv.offsetHeight;\n      var iwOffsetX = this.pixelOffset_.width;\n      var iwOffsetY = this.pixelOffset_.height;\n      var iwWidth = this.div_.offsetWidth;\n      var iwHeight = this.div_.offsetHeight;\n      var padX = this.infoBoxClearance_.width;\n      var padY = this.infoBoxClearance_.height;\n      var pixPosition = this.getProjection().fromLatLngToContainerPixel(this.position_);\n\n      if (pixPosition.x < (-iwOffsetX + padX)) {\n        xOffset = pixPosition.x + iwOffsetX - padX;\n      } else if ((pixPosition.x + iwWidth + iwOffsetX + padX) > mapWidth) {\n        xOffset = pixPosition.x + iwWidth + iwOffsetX + padX - mapWidth;\n      }\n      if (this.alignBottom_) {\n        if (pixPosition.y < (-iwOffsetY + padY + iwHeight)) {\n          yOffset = pixPosition.y + iwOffsetY - padY - iwHeight;\n        } else if ((pixPosition.y + iwOffsetY + padY) > mapHeight) {\n          yOffset = pixPosition.y + iwOffsetY + padY - mapHeight;\n        }\n      } else {\n        if (pixPosition.y < (-iwOffsetY + padY)) {\n          yOffset = pixPosition.y + iwOffsetY - padY;\n        } else if ((pixPosition.y + iwHeight + iwOffsetY + padY) > mapHeight) {\n          yOffset = pixPosition.y + iwHeight + iwOffsetY + padY - mapHeight;\n        }\n      }\n\n      if (!(xOffset === 0 && yOffset === 0)) {\n\n        // Move the map to the shifted center.\n        //\n        var c = map.getCenter();\n        map.panBy(xOffset, yOffset);\n      }\n    }\n  }\n};\n\n/**\n * Sets the style of the InfoBox by setting the style sheet and applying\n * other specific styles requested.\n * @private\n */\nInfoBox.prototype.setBoxStyle_ = function () {\n\n  var i, boxStyle;\n\n  if (this.div_) {\n\n    // Apply style values from the style sheet defined in the boxClass parameter:\n    this.div_.className = this.boxClass_;\n\n    // Clear existing inline style values:\n    this.div_.style.cssText = \"\";\n\n    // Apply style values defined in the boxStyle parameter:\n    boxStyle = this.boxStyle_;\n    for (i in boxStyle) {\n\n      if (boxStyle.hasOwnProperty(i)) {\n\n        this.div_.style[i] = boxStyle[i];\n      }\n    }\n\n    // Fix for iOS disappearing InfoBox problem.\n    // See http://stackoverflow.com/questions/9229535/google-maps-markers-disappear-at-certain-zoom-level-only-on-iphone-ipad\n    this.div_.style.WebkitTransform = \"translateZ(0)\";\n\n    // Fix up opacity style for benefit of MSIE:\n    //\n    if (typeof this.div_.style.opacity !== \"undefined\" && this.div_.style.opacity !== \"\") {\n      // See http://www.quirksmode.org/css/opacity.html\n      this.div_.style.MsFilter = \"\\\"progid:DXImageTransform.Microsoft.Alpha(Opacity=\" + (this.div_.style.opacity * 100) + \")\\\"\";\n      this.div_.style.filter = \"alpha(opacity=\" + (this.div_.style.opacity * 100) + \")\";\n    }\n\n    // Apply required styles:\n    //\n    this.div_.style.position = \"absolute\";\n    this.div_.style.visibility = 'hidden';\n    if (this.zIndex_ !== null) {\n\n      this.div_.style.zIndex = this.zIndex_;\n    }\n    if (!this.div_.style.overflow) {\n      this.div_.style.overflow = \"auto\";\n    }\n  }\n};\n\n/**\n * Get the widths of the borders of the InfoBox.\n * @private\n * @return {Object} widths object (top, bottom left, right)\n */\nInfoBox.prototype.getBoxWidths_ = function () {\n\n  var computedStyle;\n  var bw = {top: 0, bottom: 0, left: 0, right: 0};\n  var box = this.div_;\n\n  if (document.defaultView && document.defaultView.getComputedStyle) {\n\n    computedStyle = box.ownerDocument.defaultView.getComputedStyle(box, \"\");\n\n    if (computedStyle) {\n\n      // The computed styles are always in pixel units (good!)\n      bw.top = parseInt(computedStyle.borderTopWidth, 10) || 0;\n      bw.bottom = parseInt(computedStyle.borderBottomWidth, 10) || 0;\n      bw.left = parseInt(computedStyle.borderLeftWidth, 10) || 0;\n      bw.right = parseInt(computedStyle.borderRightWidth, 10) || 0;\n    }\n\n  } else if (document.documentElement.currentStyle) { // MSIE\n\n    if (box.currentStyle) {\n\n      // The current styles may not be in pixel units, but assume they are (bad!)\n      bw.top = parseInt(box.currentStyle.borderTopWidth, 10) || 0;\n      bw.bottom = parseInt(box.currentStyle.borderBottomWidth, 10) || 0;\n      bw.left = parseInt(box.currentStyle.borderLeftWidth, 10) || 0;\n      bw.right = parseInt(box.currentStyle.borderRightWidth, 10) || 0;\n    }\n  }\n\n  return bw;\n};\n\n/**\n * Invoked when <tt>close</tt> is called. Do not call it directly.\n */\nInfoBox.prototype.onRemove = function () {\n\n  if (this.div_) {\n\n    this.div_.parentNode.removeChild(this.div_);\n    this.div_ = null;\n  }\n};\n\n/**\n * Draws the InfoBox based on the current map projection and zoom level.\n */\nInfoBox.prototype.draw = function () {\n\n  this.createInfoBoxDiv_();\n\n  var pixPosition = this.getProjection().fromLatLngToDivPixel(this.position_);\n\n  this.div_.style.left = (pixPosition.x + this.pixelOffset_.width) + \"px\";\n\n  if (this.alignBottom_) {\n    this.div_.style.bottom = -(pixPosition.y + this.pixelOffset_.height) + \"px\";\n  } else {\n    this.div_.style.top = (pixPosition.y + this.pixelOffset_.height) + \"px\";\n  }\n\n  if (this.isHidden_) {\n\n    this.div_.style.visibility = \"hidden\";\n\n  } else {\n\n    this.div_.style.visibility = \"visible\";\n  }\n};\n\n/**\n * Sets the options for the InfoBox. Note that changes to the <tt>maxWidth</tt>,\n *  <tt>closeBoxMargin</tt>, <tt>closeBoxURL</tt>, and <tt>enableEventPropagation</tt>\n *  properties have no affect until the current InfoBox is <tt>close</tt>d and a new one\n *  is <tt>open</tt>ed.\n * @param {InfoBoxOptions} opt_opts\n */\nInfoBox.prototype.setOptions = function (opt_opts) {\n  if (typeof opt_opts.boxClass !== \"undefined\") { // Must be first\n\n    this.boxClass_ = opt_opts.boxClass;\n    this.setBoxStyle_();\n  }\n  if (typeof opt_opts.boxStyle !== \"undefined\") { // Must be second\n\n    this.boxStyle_ = opt_opts.boxStyle;\n    this.setBoxStyle_();\n  }\n  if (typeof opt_opts.content !== \"undefined\") {\n\n    this.setContent(opt_opts.content);\n  }\n  if (typeof opt_opts.disableAutoPan !== \"undefined\") {\n\n    this.disableAutoPan_ = opt_opts.disableAutoPan;\n  }\n  if (typeof opt_opts.maxWidth !== \"undefined\") {\n\n    this.maxWidth_ = opt_opts.maxWidth;\n  }\n  if (typeof opt_opts.pixelOffset !== \"undefined\") {\n\n    this.pixelOffset_ = opt_opts.pixelOffset;\n  }\n  if (typeof opt_opts.alignBottom !== \"undefined\") {\n\n    this.alignBottom_ = opt_opts.alignBottom;\n  }\n  if (typeof opt_opts.position !== \"undefined\") {\n\n    this.setPosition(opt_opts.position);\n  }\n  if (typeof opt_opts.zIndex !== \"undefined\") {\n\n    this.setZIndex(opt_opts.zIndex);\n  }\n  if (typeof opt_opts.closeBoxMargin !== \"undefined\") {\n\n    this.closeBoxMargin_ = opt_opts.closeBoxMargin;\n  }\n  if (typeof opt_opts.closeBoxURL !== \"undefined\") {\n\n    this.closeBoxURL_ = opt_opts.closeBoxURL;\n  }\n  if (typeof opt_opts.infoBoxClearance !== \"undefined\") {\n\n    this.infoBoxClearance_ = opt_opts.infoBoxClearance;\n  }\n  if (typeof opt_opts.isHidden !== \"undefined\") {\n\n    this.isHidden_ = opt_opts.isHidden;\n  }\n  if (typeof opt_opts.visible !== \"undefined\") {\n\n    this.isHidden_ = !opt_opts.visible;\n  }\n  if (typeof opt_opts.enableEventPropagation !== \"undefined\") {\n\n    this.enableEventPropagation_ = opt_opts.enableEventPropagation;\n  }\n\n  if (this.div_) {\n\n    this.draw();\n  }\n};\n\n/**\n * Sets the content of the InfoBox.\n *  The content can be plain text or an HTML DOM node.\n * @param {string|Node} content\n */\nInfoBox.prototype.setContent = function (content) {\n  this.content_ = content;\n\n  if (this.div_) {\n\n    if (this.closeListener_) {\n\n      google.maps.event.removeListener(this.closeListener_);\n      this.closeListener_ = null;\n    }\n\n    // Odd code required to make things work with MSIE.\n    //\n    if (!this.fixedWidthSet_) {\n\n      this.div_.style.width = \"\";\n    }\n\n    if (typeof content.nodeType === \"undefined\") {\n      this.div_.innerHTML = this.getCloseBoxImg_() + content;\n    } else {\n      this.div_.innerHTML = this.getCloseBoxImg_();\n      this.div_.appendChild(content);\n    }\n\n    // Perverse code required to make things work with MSIE.\n    // (Ensures the close box does, in fact, float to the right.)\n    //\n    if (!this.fixedWidthSet_) {\n      this.div_.style.width = this.div_.offsetWidth + \"px\";\n      if (typeof content.nodeType === \"undefined\") {\n        this.div_.innerHTML = this.getCloseBoxImg_() + content;\n      } else {\n        this.div_.innerHTML = this.getCloseBoxImg_();\n        this.div_.appendChild(content);\n      }\n    }\n\n    this.addClickHandler_();\n  }\n\n  /**\n   * This event is fired when the content of the InfoBox changes.\n   * @name InfoBox#content_changed\n   * @event\n   */\n  google.maps.event.trigger(this, \"content_changed\");\n};\n\n/**\n * Sets the geographic location of the InfoBox.\n * @param {LatLng} latlng\n */\nInfoBox.prototype.setPosition = function (latlng) {\n\n  this.position_ = latlng;\n\n  if (this.div_) {\n\n    this.draw();\n  }\n\n  /**\n   * This event is fired when the position of the InfoBox changes.\n   * @name InfoBox#position_changed\n   * @event\n   */\n  google.maps.event.trigger(this, \"position_changed\");\n};\n\n/**\n * Sets the zIndex style for the InfoBox.\n * @param {number} index\n */\nInfoBox.prototype.setZIndex = function (index) {\n\n  this.zIndex_ = index;\n\n  if (this.div_) {\n\n    this.div_.style.zIndex = index;\n  }\n\n  /**\n   * This event is fired when the zIndex of the InfoBox changes.\n   * @name InfoBox#zindex_changed\n   * @event\n   */\n  google.maps.event.trigger(this, \"zindex_changed\");\n};\n\n/**\n * Sets the visibility of the InfoBox.\n * @param {boolean} isVisible\n */\nInfoBox.prototype.setVisible = function (isVisible) {\n\n  this.isHidden_ = !isVisible;\n  if (this.div_) {\n    this.div_.style.visibility = (this.isHidden_ ? \"hidden\" : \"visible\");\n  }\n};\n\n/**\n * Returns the content of the InfoBox.\n * @returns {string | Node}\n */\nInfoBox.prototype.getContent = function () {\n\n  return this.content_;\n};\n\n/**\n * Returns the geographic location of the InfoBox.\n * @returns {LatLng}\n */\nInfoBox.prototype.getPosition = function () {\n\n  return this.position_;\n};\n\n/**\n * Returns the zIndex for the InfoBox.\n * @returns {number}\n */\nInfoBox.prototype.getZIndex = function () {\n\n  return this.zIndex_;\n};\n\n/**\n * Returns a flag indicating whether the InfoBox is visible.\n * @returns {boolean}\n */\nInfoBox.prototype.getVisible = function () {\n\n  var isVisible;\n\n  if ((typeof this.getMap() === \"undefined\") || (this.getMap() === null)) {\n    isVisible = false;\n  } else {\n    isVisible = !this.isHidden_;\n  }\n  return isVisible;\n};\n\n/**\n * Shows the InfoBox. [Deprecated; use <tt>setVisible</tt> instead.]\n */\nInfoBox.prototype.show = function () {\n\n  this.isHidden_ = false;\n  if (this.div_) {\n    this.div_.style.visibility = \"visible\";\n  }\n};\n\n/**\n * Hides the InfoBox. [Deprecated; use <tt>setVisible</tt> instead.]\n */\nInfoBox.prototype.hide = function () {\n\n  this.isHidden_ = true;\n  if (this.div_) {\n    this.div_.style.visibility = \"hidden\";\n  }\n};\n\n/**\n * Adds the InfoBox to the specified map or Street View panorama. If <tt>anchor</tt>\n *  (usually a <tt>google.maps.Marker</tt>) is specified, the position\n *  of the InfoBox is set to the position of the <tt>anchor</tt>. If the\n *  anchor is dragged to a new location, the InfoBox moves as well.\n * @param {Map|StreetViewPanorama} map\n * @param {MVCObject} [anchor]\n */\nInfoBox.prototype.open = function (map, anchor) {\n\n  var me = this;\n\n  if (anchor) {\n\n    this.position_ = anchor.getPosition();\n    this.moveListener_ = google.maps.event.addListener(anchor, \"position_changed\", function () {\n      me.setPosition(this.getPosition());\n    });\n\n    this.mapListener_ = google.maps.event.addListener(anchor, \"map_changed\", function() {\n      me.setMap(this.map);\n    });\n  }\n\n  this.setMap(map);\n\n  if (this.div_) {\n\n    this.panBox_();\n  }\n};\n\n/**\n * Removes the InfoBox from the map.\n */\nInfoBox.prototype.close = function () {\n\n  var i;\n\n  if (this.closeListener_) {\n\n    google.maps.event.removeListener(this.closeListener_);\n    this.closeListener_ = null;\n  }\n\n  if (this.eventListeners_) {\n\n    for (i = 0; i < this.eventListeners_.length; i++) {\n\n      google.maps.event.removeListener(this.eventListeners_[i]);\n    }\n    this.eventListeners_ = null;\n  }\n\n  if (this.moveListener_) {\n\n    google.maps.event.removeListener(this.moveListener_);\n    this.moveListener_ = null;\n  }\n\n  if (this.mapListener_) {\n\n    google.maps.event.removeListener(this.mapListener_);\n    this.mapListener_ = null;\n  }\n\n  if (this.contextListener_) {\n\n    google.maps.event.removeListener(this.contextListener_);\n    this.contextListener_ = null;\n  }\n\n  this.setMap(null);\n};\n\n\nmodule.exports = { default: InfoBox, InfoBox: InfoBox }; //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/google-maps-infobox/infobox-module.js\n");

/***/ }),

/***/ "./components/landings/lands_sections/section_map.js":
/*!***********************************************************!*\
  !*** ./components/landings/lands_sections/section_map.js ***!
  \***********************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_google_maps__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-google-maps */ \"./node_modules/react-google-maps/lib/index.js\");\nvar _this = undefined;\n\n\nvar InfoBox = (__webpack_require__(/*! react-google-maps/lib/components/addons/InfoBox */ \"./node_modules/react-google-maps/lib/components/addons/InfoBox.js\").InfoBox);\nvar SectionMap = function(props) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_google_maps__WEBPACK_IMPORTED_MODULE_1__.GoogleMap, {\n        defaultZoom: 10,\n        defaultCenter: {\n            lat: 20.276338,\n            lng: -98.964443\n        },\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(InfoBox, {\n                defaultPosition: new google.maps.LatLng(props.center.lat, props.center.lng),\n                options: {\n                    closeBoxURL: \"\",\n                    enableEventPropagation: true\n                },\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    style: {\n                        backgroundColor: \"yellow\",\n                        opacity: 0.75,\n                        padding: \"12px\"\n                    },\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        style: {\n                            fontSize: \"16px\",\n                            fontColor: \"#08233B\"\n                        },\n                        children: \"Hello, Taipei!\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\PROYECTOS-DEVIN\\\\lifo-web\\\\lifo-project\\\\components\\\\landings\\\\lands_sections\\\\section_map.js\",\n                        lineNumber: 22,\n                        columnNumber: 21\n                    }, _this)\n                }, void 0, false, {\n                    fileName: \"C:\\\\PROYECTOS-DEVIN\\\\lifo-web\\\\lifo-project\\\\components\\\\landings\\\\lands_sections\\\\section_map.js\",\n                    lineNumber: 21,\n                    columnNumber: 17\n                }, _this)\n            }, void 0, false, {\n                fileName: \"C:\\\\PROYECTOS-DEVIN\\\\lifo-web\\\\lifo-project\\\\components\\\\landings\\\\lands_sections\\\\section_map.js\",\n                lineNumber: 17,\n                columnNumber: 13\n            }, _this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_google_maps__WEBPACK_IMPORTED_MODULE_1__.Marker, {\n                position: {\n                    lat: 20.276338,\n                    lng: -98.964443\n                }\n            }, void 0, false, {\n                fileName: \"C:\\\\PROYECTOS-DEVIN\\\\lifo-web\\\\lifo-project\\\\components\\\\landings\\\\lands_sections\\\\section_map.js\",\n                lineNumber: 27,\n                columnNumber: 13\n            }, _this)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\PROYECTOS-DEVIN\\\\lifo-web\\\\lifo-project\\\\components\\\\landings\\\\lands_sections\\\\section_map.js\",\n        lineNumber: 12,\n        columnNumber: 9\n    }, _this);\n};\n_c = SectionMap;\n/* harmony default export */ __webpack_exports__[\"default\"] = (_c2 = (0,react_google_maps__WEBPACK_IMPORTED_MODULE_1__.withScriptjs)(_c1 = (0,react_google_maps__WEBPACK_IMPORTED_MODULE_1__.withGoogleMap)(SectionMap)));\nvar _c, _c1, _c2;\n$RefreshReg$(_c, \"SectionMap\");\n$RefreshReg$(_c1, \"%default%$withScriptjs\");\n$RefreshReg$(_c2, \"%default%\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL2xhbmRpbmdzL2xhbmRzX3NlY3Rpb25zL3NlY3Rpb25fbWFwLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7QUFLMEI7QUFFMUIsSUFBTSxPQUFTLEdBQUtLLHlKQUFMO0FBRWYsSUFBTUMsVUFBVSxHQUFHLFNBQUNDLEtBQUssRUFBSztJQUMxQixxQkFDSSw4REFBQ1Asd0RBQVM7UUFDTlEsV0FBVyxFQUFFLEVBQUU7UUFDZkMsYUFBYSxFQUFFO1lBQUVDLEdBQUcsRUFBRSxTQUFTO1lBQUVDLEdBQUcsRUFBRSxDQUFDLFNBQVM7U0FBRTs7MEJBR2xELDhEQUFDUCxPQUFPO2dCQUNKUSxlQUFlLEVBQUUsSUFBSUMsTUFBTSxDQUFDQyxJQUFJLENBQUNDLE1BQU0sQ0FBQ1IsS0FBSyxDQUFDUyxNQUFNLENBQUNOLEdBQUcsRUFBRUgsS0FBSyxDQUFDUyxNQUFNLENBQUNMLEdBQUcsQ0FBQztnQkFDM0VNLE9BQU8sRUFBRTtvQkFBRUMsV0FBVyxFQUFHO29CQUFHQyxzQkFBc0IsRUFBRSxJQUFJO2lCQUFFOzBCQUUxRCw0RUFBQ0MsS0FBRztvQkFBQ0MsS0FBSyxFQUFFO3dCQUFFQyxlQUFlLEVBQUcsUUFBTTt3QkFBR0MsT0FBTyxFQUFFLElBQUk7d0JBQUVDLE9BQU8sRUFBRyxNQUFJO3FCQUFHOzhCQUNyRSw0RUFBQ0osS0FBRzt3QkFBQ0MsS0FBSyxFQUFFOzRCQUFFSSxRQUFRLEVBQUcsTUFBSTs0QkFBR0MsU0FBUyxFQUFHLFNBQU87eUJBQUc7a0NBQUUsZ0JBRXhEOzs7Ozs2QkFBTTs7Ozs7eUJBQ0o7Ozs7O3FCQUNBOzBCQUNWLDhEQUFDdkIscURBQU07Z0JBQUN3QixRQUFRLEVBQUU7b0JBQUVqQixHQUFHLEVBQUUsU0FBUztvQkFBRUMsR0FBRyxFQUFFLENBQUMsU0FBUztpQkFBRTs7Ozs7cUJBQUk7Ozs7OzthQUNoRCxDQUNoQjtDQUNKO0FBcEJLTCxLQUFBQSxVQUFVO0FBc0JoQiwrREFBZUwsTUFBQUEsK0RBQVksQ0FDdkJDLE1BQUFBLGdFQUFhLENBQ1RJLFVBQVUsQ0FDYixDQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2NvbXBvbmVudHMvbGFuZGluZ3MvbGFuZHNfc2VjdGlvbnMvc2VjdGlvbl9tYXAuanM/Mzc3YyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xyXG4gICAgR29vZ2xlTWFwLFxyXG4gICAgd2l0aFNjcmlwdGpzLFxyXG4gICAgd2l0aEdvb2dsZU1hcCxcclxuICAgIE1hcmtlclxyXG59IGZyb20gJ3JlYWN0LWdvb2dsZS1tYXBzJ1xyXG5cclxuY29uc3QgeyBJbmZvQm94IH0gPSByZXF1aXJlKFwicmVhY3QtZ29vZ2xlLW1hcHMvbGliL2NvbXBvbmVudHMvYWRkb25zL0luZm9Cb3hcIik7XHJcblxyXG5jb25zdCBTZWN0aW9uTWFwID0gKHByb3BzKSA9PiB7XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICAgIDxHb29nbGVNYXBcclxuICAgICAgICAgICAgZGVmYXVsdFpvb209ezEwfVxyXG4gICAgICAgICAgICBkZWZhdWx0Q2VudGVyPXt7IGxhdDogMjAuMjc2MzM4LCBsbmc6IC05OC45NjQ0NDMgfX1cclxuXHJcbiAgICAgICAgPlxyXG4gICAgICAgICAgICA8SW5mb0JveFxyXG4gICAgICAgICAgICAgICAgZGVmYXVsdFBvc2l0aW9uPXtuZXcgZ29vZ2xlLm1hcHMuTGF0TG5nKHByb3BzLmNlbnRlci5sYXQsIHByb3BzLmNlbnRlci5sbmcpfVxyXG4gICAgICAgICAgICAgICAgb3B0aW9ucz17eyBjbG9zZUJveFVSTDogYGAsIGVuYWJsZUV2ZW50UHJvcGFnYXRpb246IHRydWUgfX1cclxuICAgICAgICAgICAgPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBzdHlsZT17eyBiYWNrZ3JvdW5kQ29sb3I6IGB5ZWxsb3dgLCBvcGFjaXR5OiAwLjc1LCBwYWRkaW5nOiBgMTJweGAgfX0+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT17eyBmb250U2l6ZTogYDE2cHhgLCBmb250Q29sb3I6IGAjMDgyMzNCYCB9fT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgSGVsbG8sIFRhaXBlaSFcclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8L0luZm9Cb3g+XHJcbiAgICAgICAgICAgIDxNYXJrZXIgcG9zaXRpb249e3sgbGF0OiAyMC4yNzYzMzgsIGxuZzogLTk4Ljk2NDQ0MyB9fSAvPlxyXG4gICAgICAgIDwvR29vZ2xlTWFwID5cclxuICAgIClcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgd2l0aFNjcmlwdGpzKFxyXG4gICAgd2l0aEdvb2dsZU1hcChcclxuICAgICAgICBTZWN0aW9uTWFwXHJcbiAgICApXHJcbikiXSwibmFtZXMiOlsiR29vZ2xlTWFwIiwid2l0aFNjcmlwdGpzIiwid2l0aEdvb2dsZU1hcCIsIk1hcmtlciIsIkluZm9Cb3giLCJyZXF1aXJlIiwiU2VjdGlvbk1hcCIsInByb3BzIiwiZGVmYXVsdFpvb20iLCJkZWZhdWx0Q2VudGVyIiwibGF0IiwibG5nIiwiZGVmYXVsdFBvc2l0aW9uIiwiZ29vZ2xlIiwibWFwcyIsIkxhdExuZyIsImNlbnRlciIsIm9wdGlvbnMiLCJjbG9zZUJveFVSTCIsImVuYWJsZUV2ZW50UHJvcGFnYXRpb24iLCJkaXYiLCJzdHlsZSIsImJhY2tncm91bmRDb2xvciIsIm9wYWNpdHkiLCJwYWRkaW5nIiwiZm9udFNpemUiLCJmb250Q29sb3IiLCJwb3NpdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./components/landings/lands_sections/section_map.js\n");

/***/ }),

/***/ "./node_modules/react-google-maps/lib/components/addons/InfoBox.js":
/*!*************************************************************************!*\
  !*** ./node_modules/react-google-maps/lib/components/addons/InfoBox.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true,\n}))\nexports.InfoBox = undefined\n\nvar _defineProperty2 = __webpack_require__(/*! babel-runtime/helpers/defineProperty */ \"./node_modules/babel-runtime/helpers/defineProperty.js\")\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2)\n\nvar _getPrototypeOf = __webpack_require__(/*! babel-runtime/core-js/object/get-prototype-of */ \"./node_modules/babel-runtime/core-js/object/get-prototype-of.js\")\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf)\n\nvar _classCallCheck2 = __webpack_require__(/*! babel-runtime/helpers/classCallCheck */ \"./node_modules/babel-runtime/helpers/classCallCheck.js\")\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2)\n\nvar _createClass2 = __webpack_require__(/*! babel-runtime/helpers/createClass */ \"./node_modules/babel-runtime/helpers/createClass.js\")\n\nvar _createClass3 = _interopRequireDefault(_createClass2)\n\nvar _possibleConstructorReturn2 = __webpack_require__(/*! babel-runtime/helpers/possibleConstructorReturn */ \"./node_modules/babel-runtime/helpers/possibleConstructorReturn.js\")\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(\n  _possibleConstructorReturn2\n)\n\nvar _inherits2 = __webpack_require__(/*! babel-runtime/helpers/inherits */ \"./node_modules/babel-runtime/helpers/inherits.js\")\n\nvar _inherits3 = _interopRequireDefault(_inherits2)\n\nvar _InfoBox$contextTypes\n\nvar _canUseDom = __webpack_require__(/*! can-use-dom */ \"./node_modules/can-use-dom/index.js\")\n\nvar _canUseDom2 = _interopRequireDefault(_canUseDom)\n\nvar _invariant = __webpack_require__(/*! invariant */ \"./node_modules/invariant/browser.js\")\n\nvar _invariant2 = _interopRequireDefault(_invariant)\n\nvar _react = __webpack_require__(/*! react */ \"./node_modules/react/index.js\")\n\nvar _react2 = _interopRequireDefault(_react)\n\nvar _reactDom = __webpack_require__(/*! react-dom */ \"./node_modules/react-dom/index.js\")\n\nvar _reactDom2 = _interopRequireDefault(_reactDom)\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\")\n\nvar _propTypes2 = _interopRequireDefault(_propTypes)\n\nvar _MapChildHelper = __webpack_require__(/*! ../../utils/MapChildHelper */ \"./node_modules/react-google-maps/lib/utils/MapChildHelper.js\")\n\nvar _constants = __webpack_require__(/*! ../../constants */ \"./node_modules/react-google-maps/lib/constants.js\")\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : { default: obj }\n}\n\n/**\n * A wrapper around `InfoBox`\n *\n * @see http://htmlpreview.github.io/?https://github.com/googlemaps/v3-utility-library/blob/master/infobox/docs/reference.html\n */\nvar InfoBox = (exports.InfoBox = (function(_React$PureComponent) {\n  ;(0, _inherits3.default)(InfoBox, _React$PureComponent)\n\n  function InfoBox() {\n    var _ref\n\n    var _temp, _this, _ret\n\n    ;(0, _classCallCheck3.default)(this, InfoBox)\n\n    for (\n      var _len = arguments.length, args = Array(_len), _key = 0;\n      _key < _len;\n      _key++\n    ) {\n      args[_key] = arguments[_key]\n    }\n\n    return (\n      (_ret = ((_temp = ((_this = (0, _possibleConstructorReturn3.default)(\n        this,\n        (_ref =\n          InfoBox.__proto__ ||\n          (0, _getPrototypeOf2.default)(InfoBox)).call.apply(\n          _ref,\n          [this].concat(args)\n        )\n      )),\n      _this)),\n      (_this.state = (0, _defineProperty3.default)(\n        {},\n        _constants.INFO_BOX,\n        null\n      )),\n      _temp)),\n      (0, _possibleConstructorReturn3.default)(_this, _ret)\n    )\n  }\n\n  ;(0, _createClass3.default)(InfoBox, [\n    {\n      key: \"componentWillMount\",\n\n      /*\n     * @see https://developers.google.com/maps/documentation/javascript/3.exp/reference#InfoBox\n     */\n      value: function componentWillMount() {\n        if (!_canUseDom2.default || this.state[_constants.INFO_BOX]) {\n          return\n        }\n\n        var _require = __webpack_require__(/* \"google-maps-infobox\" uses \"google\" as a global variable. Since we don't\n                              * have \"google\" on the server, we can not use it in server-side rendering.\n                              * As a result, we import \"google-maps-infobox\" here to prevent an error on\n                              * a isomorphic server.\n                              */ /*! google-maps-infobox */ \"./node_modules/google-maps-infobox/infobox-module.js\"),\n          GoogleMapsInfobox = _require.InfoBox\n\n        var infoBox = new GoogleMapsInfobox()\n        ;(0, _MapChildHelper.construct)(\n          InfoBox.propTypes,\n          updaterMap,\n          this.props,\n          infoBox\n        )\n        infoBox.setMap(this.context[_constants.MAP])\n        this.setState(\n          (0, _defineProperty3.default)({}, _constants.INFO_BOX, infoBox)\n        )\n      },\n    },\n    {\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        ;(0, _MapChildHelper.componentDidMount)(\n          this,\n          this.state[_constants.INFO_BOX],\n          eventMap\n        )\n        var content = document.createElement(\"div\")\n        _reactDom2.default.unstable_renderSubtreeIntoContainer(\n          this,\n          _react2.default.Children.only(this.props.children),\n          content\n        )\n        this.state[_constants.INFO_BOX].setContent(content)\n        open(this.state[_constants.INFO_BOX], this.context[_constants.ANCHOR])\n      },\n    },\n    {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps) {\n        ;(0, _MapChildHelper.componentDidUpdate)(\n          this,\n          this.state[_constants.INFO_BOX],\n          eventMap,\n          updaterMap,\n          prevProps\n        )\n        if (this.props.children !== prevProps.children) {\n          _reactDom2.default.unstable_renderSubtreeIntoContainer(\n            this,\n            _react2.default.Children.only(this.props.children),\n            this.state[_constants.INFO_BOX].getContent()\n          )\n        }\n      },\n    },\n    {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        ;(0, _MapChildHelper.componentWillUnmount)(this)\n        var infoBox = this.state[_constants.INFO_BOX]\n        if (infoBox) {\n          if (infoBox.getContent()) {\n            _reactDom2.default.unmountComponentAtNode(infoBox.getContent())\n          }\n          infoBox.setMap(null)\n        }\n      },\n    },\n    {\n      key: \"render\",\n      value: function render() {\n        return false\n      },\n\n      /**\n       *\n       * @type LatLng\n       */\n    },\n    {\n      key: \"getPosition\",\n      value: function getPosition() {\n        return this.state[_constants.INFO_BOX].getPosition()\n      },\n\n      /**\n       *\n       * @type boolean\n       */\n    },\n    {\n      key: \"getVisible\",\n      value: function getVisible() {\n        return this.state[_constants.INFO_BOX].getVisible()\n      },\n\n      /**\n       *\n       * @type number\n       */\n    },\n    {\n      key: \"getZIndex\",\n      value: function getZIndex() {\n        return this.state[_constants.INFO_BOX].getZIndex()\n      },\n    },\n  ])\n  return InfoBox\n})(_react2.default.PureComponent))\n\nInfoBox.propTypes = {\n  /**\n   * @type InfoBoxOptions\n   */\n  defaultOptions: _propTypes2.default.any,\n\n  /**\n   * @type LatLng|LatLngLiteral\n   */\n  defaultPosition: _propTypes2.default.any,\n\n  /**\n   * @type boolean\n   */\n  defaultVisible: _propTypes2.default.bool,\n\n  /**\n   * @type number\n   */\n  defaultZIndex: _propTypes2.default.number,\n\n  /**\n   * @type InfoBoxOptions\n   */\n  options: _propTypes2.default.any,\n\n  /**\n   * @type LatLng|LatLngLiteral\n   */\n  position: _propTypes2.default.any,\n\n  /**\n   * @type boolean\n   */\n  visible: _propTypes2.default.bool,\n\n  /**\n   * @type number\n   */\n  zIndex: _propTypes2.default.number,\n\n  /**\n   * function\n   */\n  onCloseClick: _propTypes2.default.func,\n\n  /**\n   * function\n   */\n  onDomReady: _propTypes2.default.func,\n\n  /**\n   * function\n   */\n  onContentChanged: _propTypes2.default.func,\n\n  /**\n   * function\n   */\n  onPositionChanged: _propTypes2.default.func,\n\n  /**\n   * function\n   */\n  onZindexChanged: _propTypes2.default.func,\n}\nInfoBox.contextTypes = ((_InfoBox$contextTypes = {}),\n(0, _defineProperty3.default)(\n  _InfoBox$contextTypes,\n  _constants.MAP,\n  _propTypes2.default.object\n),\n(0, _defineProperty3.default)(\n  _InfoBox$contextTypes,\n  _constants.ANCHOR,\n  _propTypes2.default.object\n),\n_InfoBox$contextTypes)\nexports[\"default\"] = InfoBox\n\nvar open = function open(infoBox, anchor) {\n  if (anchor) {\n    infoBox.open(infoBox.getMap(), anchor)\n  } else if (infoBox.getPosition()) {\n    infoBox.open(infoBox.getMap())\n  } else {\n    ;(0, _invariant2.default)(\n      false,\n      \"You must provide either an anchor (typically render it inside a <Marker>) or a position props for <InfoBox>.\"\n    )\n  }\n}\n\nvar eventMap = {\n  onCloseClick: \"closeclick\",\n  onDomReady: \"domready\",\n  onContentChanged: \"content_changed\",\n  onPositionChanged: \"position_changed\",\n  onZindexChanged: \"zindex_changed\",\n}\n\nvar updaterMap = {\n  options: function options(instance, _options) {\n    instance.setOptions(_options)\n  },\n  position: function position(instance, _position) {\n    instance.setPosition(_position)\n  },\n  visible: function visible(instance, _visible) {\n    instance.setVisible(_visible)\n  },\n  zIndex: function zIndex(instance, _zIndex) {\n    instance.setZIndex(_zIndex)\n  },\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-google-maps/lib/components/addons/InfoBox.js\n");

/***/ })

});